angular.module("ui.tinymce",[]).value("uiTinymceConfig",{}).directive("uiTinymce",["uiTinymceConfig",function(uiTinymceConfig){uiTinymceConfig=uiTinymceConfig||{};var generatedIds=0;return{priority:10,require:"ngModel",link:function(scope,elm,attrs,ngModel){var expression,options,tinyInstance,updateView=function(){ngModel.$setViewValue(elm.val());if(!scope.$root.$$phase){scope.$apply();}};if(!attrs.id){attrs.$set("id","uiTinymce"+generatedIds++);}if(attrs.uiTinymce){expression=scope.$eval(attrs.uiTinymce);}else{expression={};}if(expression.setup){var configSetup=expression.setup;delete expression.setup;}options={setup:function(ed){var args;ed.on("init",function(args){ngModel.$render();ngModel.$setPristine();});ed.on("ExecCommand",function(e){ed.save();updateView();});ed.on("KeyUp",function(e){ed.save();updateView();});ed.on("SetContent",function(e){if(!e.initial&&ngModel.$viewValue!==e.content){ed.save();updateView();}});ed.on("blur",function(e){elm.blur();});ed.on("ObjectResized",function(e){ed.save();updateView();});if(configSetup){configSetup(ed);}},mode:"exact",elements:attrs.id};angular.extend(options,uiTinymceConfig,expression);setTimeout(function(){tinymce.init(options);});ngModel.$render=function(){if(!tinyInstance){tinyInstance=tinymce.get(attrs.id);}if(tinyInstance){tinyInstance.setContent(ngModel.$viewValue||"");}};scope.$on("$destroy",function(){if(!tinyInstance){tinyInstance=tinymce.get(attrs.id);}if(tinyInstance){tinyInstance.remove();tinyInstance=null;}});}};}]);