/* #UPDATED */
/* #CLEARED */
package org.test.shop.model.domain.entity;

// Generated 30.08.2015 21:00:08 by Hibernate Tools 4.3.1

import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.BatchSize;
import org.test.shop.model.domain.SRel;

import com.fasterxml.jackson.annotation.JsonProperty;

import javax.persistence.PreRemove;

import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * RelServHotelRoomImage generated by hbm2java, updated by voovee
 */
@JsonIgnoreProperties({
			 
			  "firmid"
			, "firm"
			, "serieskey" 
})
@Entity
@Table(name="rel_serv_hotel_room_image")
public class RelServHotelRoomImage extends SRel  {

	private static final long serialVersionUID = 5358366811183642L;

	private Integer id;
	private ServHotelRoom servHotelRoom;
	@JsonProperty("image") private TmImage tmImage;

	public RelServHotelRoomImage() {
	}

	public RelServHotelRoomImage(int id) {
		this.id = id;
	}

	public RelServHotelRoomImage(int id, ServHotelRoom servHotelRoom,
			TmImage tmImage) {
		this.id = id;
		this.servHotelRoom = servHotelRoom;
		this.tmImage = tmImage;
	}

	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SQ_RELSERVHOTELROOMIMAGE")
	@SequenceGenerator(name = "SQ_RELSERVHOTELROOMIMAGE", sequenceName = "SQ_RELSERVHOTELROOMIMAGE", initialValue = 10, allocationSize = 1)
	@Id
	@Column(name="id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Fetch(FetchMode.JOIN)
	@BatchSize(size = 100)
	@ManyToOne(fetch=FetchType.EAGER, optional = true)
	@JoinColumn(name="serv_hotel_room_id")
	public ServHotelRoom getServHotelRoom() {
		return this.servHotelRoom;
	}

	public void setServHotelRoom(ServHotelRoom servHotelRoom) {
		this.servHotelRoom = servHotelRoom;
	}

	@Fetch(FetchMode.JOIN)
	@BatchSize(size = 100)
	@ManyToOne(fetch=FetchType.EAGER, optional = true)
	@JoinColumn(name="image_id")
	public TmImage getTmImage() {
		return this.tmImage;
	}

	public void setTmImage(TmImage tmImage) {
		this.tmImage = tmImage;
	}
// #SETTER_AND_GETTER
	
// ------------------ Logic part ------------------
	
	@PreRemove
	public void preRemove() {
		servHotelRoom = null;
		tmImage = null;

	}
	
	public RelServHotelRoomImage specialInit() {
	
		
		return this;
	}
	
	public RelServHotelRoomImage init() {
		initList();
		initDicts();
		
		return this;
	}
	
	public RelServHotelRoomImage preInitList() {

		return this;
	}
	
	public RelServHotelRoomImage initList() {

		return this;
	}
	
	public RelServHotelRoomImage initDicts() {
		initSentity(getServHotelRoom());
		initSentity(getTmImage());

		return this;
	}
	
	
}