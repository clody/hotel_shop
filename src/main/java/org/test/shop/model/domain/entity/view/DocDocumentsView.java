/* #LAST_VIEW_OBJECT */
/* #UPDATED */
package org.test.shop.model.domain.entity.view;

// Generated 30.08.2015 21:00:08 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.voodoodyne.jackson.jsog.JSOGGenerator;

import javax.persistence.Table;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.FetchType;

import java.util.List;
import java.util.LinkedList;
import java.util.Date;

import javax.persistence.Column;

import org.test.shop.model.domain.SView;


/**
 * DocDocumentsView generated by hbm2java, updated by voovee
 */
@JsonIdentityInfo(generator = JSOGGenerator.class)
@JsonIgnoreProperties({
			 
			  "firmid"
			, "firm"
			, "serieskey" 
})
@Entity
@Table(name="doc_documents_view")
public class DocDocumentsView extends SView  {

	private static final long serialVersionUID = 7216472884866548L;

	private Integer id;
	private Integer version;
	private String createdby;
	private Date createon;
	private Integer firm;
	private String lastmodifiedby;
	private Date modifyon;
	private String serieskey;
	private String contenttype;
	private String extension;
	private String originalfilename;
	private String path;
	private String simpletype;
	private String size;
	private String synopsis;
	private Integer popularity;
	private String label;

	private List<TmFirmSettingsView> tmFirmSettingses = new LinkedList<TmFirmSettingsView>();
	private List<RelServHotelDocDocumentsView> relServHotelDocDocumentses = new LinkedList<RelServHotelDocDocumentsView>();
	private List<ReqServHotelView> reqServHotelsForDocumentForUserId = new LinkedList<ReqServHotelView>();
	private List<ReqServHotelView> reqServHotelsForDocumentForHotelId = new LinkedList<ReqServHotelView>();
	private List<InfoPermissionView> infoPermissions = new LinkedList<InfoPermissionView>();
	
	public DocDocumentsView() {
	}

	public DocDocumentsView(Integer id, Integer version, String createdby,
			Date createon, Integer firm, String lastmodifiedby, Date modifyon,
			String serieskey, String contenttype, String extension,
			String originalfilename, String path, String simpletype,
			String size, String synopsis, Integer popularity, String label) {
		this.id = id;
		this.version = version;
		this.createdby = createdby;
		this.createon = createon;
		this.firm = firm;
		this.lastmodifiedby = lastmodifiedby;
		this.modifyon = modifyon;
		this.serieskey = serieskey;
		this.contenttype = contenttype;
		this.extension = extension;
		this.originalfilename=originalfilename;
		this.path = path;
		this.simpletype = simpletype;
		this.size = size;
		this.synopsis = synopsis;
		this.popularity = popularity;
		this.label = label;
	}

	@Id
	@Column(name="id")
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name="version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name="createdby")
	public String getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	@Column(name="createon", length = 29)
	public Date getCreateon() {
		return this.createon;
	}

	public void setCreateon(Date createon) {
		this.createon = createon;
	}

	@Column(name="firm")
	public Integer getFirm() {
		return this.firm;
	}

	public void setFirm(Integer firm) {
		this.firm = firm;
	}

	@Column(name="lastmodifiedby")
	public String getLastmodifiedby() {
		return this.lastmodifiedby;
	}

	public void setLastmodifiedby(String lastmodifiedby) {
		this.lastmodifiedby = lastmodifiedby;
	}

	@Column(name="modifyon", length = 29)
	public Date getModifyon() {
		return this.modifyon;
	}

	public void setModifyon(Date modifyon) {
		this.modifyon = modifyon;
	}

	@Column(name="serieskey")
	public String getSerieskey() {
		return this.serieskey;
	}

	public void setSerieskey(String serieskey) {
		this.serieskey = serieskey;
	}

	@Column(name="contenttype")
	public String getContenttype() {
		return this.contenttype;
	}

	public void setContenttype(String contenttype) {
		this.contenttype = contenttype;
	}

	@Column(name="extension")
	public String getExtension() {
		return this.extension;
	}

	public void setExtension(String extension) {
		this.extension = extension;
	}

	@Column(name="originalfilename")
	public String getOriginalfilename() {
		return this.originalfilename;
	}

	public void setOriginalfilename(String originalfilename) {
		this.originalfilename=originalfilename;
	}

	@Column(name="path")
	public String getPath() {
		return this.path;
	}

	public void setPath(String path) {
		this.path = path;
	}

	@Column(name="simpletype")
	public String getSimpletype() {
		return this.simpletype;
	}

	public void setSimpletype(String simpletype) {
		this.simpletype = simpletype;
	}

	@Column(name="size")
	public String getSize() {
		return this.size;
	}

	public void setSize(String size) {
		this.size = size;
	}

	@Column(name="synopsis", length = 500)
	public String getSynopsis() {
		return this.synopsis;
	}

	public void setSynopsis(String synopsis) {
		this.synopsis = synopsis;
	}

	@Column(name="popularity")
	public Integer getPopularity() {
		return this.popularity;
	}

	public void setPopularity(Integer popularity) {
		this.popularity = popularity;
	}

	@Column(name="label")
	public String getLabel() {
		return this.label;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	 	@OneToMany(fetch=FetchType.LAZY)
	@JoinColumn(name="docdocumentsid")
	public List<TmFirmSettingsView> getTmFirmSettingses() {
		return this.tmFirmSettingses;
	}

	public void setTmFirmSettingses(List<TmFirmSettingsView> tmFirmSettingses) {
		this.tmFirmSettingses = tmFirmSettingses;
	}

	@OneToMany(fetch=FetchType.LAZY)
	@JoinColumn(name="docdocumentsid")
	public List<RelServHotelDocDocumentsView> getRelServHotelDocDocumentses() {
		return this.relServHotelDocDocumentses;
	}

	public void setRelServHotelDocDocumentses(List<RelServHotelDocDocumentsView> relServHotelDocDocumentses) {
		this.relServHotelDocDocumentses = relServHotelDocDocumentses;
	}

	@OneToMany(fetch=FetchType.LAZY)
	@JoinColumn(name="docdocumentsbydocumentforuserid")
	public List<ReqServHotelView> getReqServHotelsForDocumentForUserId() {
		return this.reqServHotelsForDocumentForUserId;
	}

	public void setReqServHotelsForDocumentForUserId(List<ReqServHotelView> reqServHotelsForDocumentForUserId) {
		this.reqServHotelsForDocumentForUserId = reqServHotelsForDocumentForUserId;
	}

	@OneToMany(fetch=FetchType.LAZY)
	@JoinColumn(name="docdocumentsbydocumentforhotelid")
	public List<ReqServHotelView> getReqServHotelsForDocumentForHotelId() {
		return this.reqServHotelsForDocumentForHotelId;
	}

	public void setReqServHotelsForDocumentForHotelId(List<ReqServHotelView> reqServHotelsForDocumentForHotelId) {
		this.reqServHotelsForDocumentForHotelId = reqServHotelsForDocumentForHotelId;
	}

	@OneToMany(fetch=FetchType.LAZY)
	@JoinColumn(name="docdocumentsid")
	public List<InfoPermissionView> getInfoPermissions() {
		return this.infoPermissions;
	}

	public void setInfoPermissions(List<InfoPermissionView> infoPermissions) {
		this.infoPermissions = infoPermissions;
	}

	
	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof DocDocumentsView))
			return false;
		DocDocumentsView castOther = (DocDocumentsView) other;

		return ((this.getId() == castOther.getId()) || (this.getId() != null
				&& castOther.getId() != null && this.getId().equals(
				castOther.getId())))
				&& ((this.getVersion() == castOther.getVersion()) || (this
						.getVersion() != null && castOther.getVersion() != null && this
						.getVersion().equals(castOther.getVersion())))
				&& ((this.getCreatedby() == castOther.getCreatedby()) || (this
						.getCreatedby() != null
						&& castOther.getCreatedby() != null && this
						.getCreatedby().equals(castOther.getCreatedby())))
				&& ((this.getCreateon() == castOther.getCreateon()) || (this
						.getCreateon() != null
						&& castOther.getCreateon() != null && this
						.getCreateon().equals(castOther.getCreateon())))
				&& ((this.getFirm() == castOther.getFirm()) || (this.getFirm() != null
						&& castOther.getFirm() != null && this.getFirm()
						.equals(castOther.getFirm())))
				&& ((this.getLastmodifiedby() == castOther.getLastmodifiedby()) || (this
						.getLastmodifiedby() != null
						&& castOther.getLastmodifiedby() != null && this
						.getLastmodifiedby().equals(
								castOther.getLastmodifiedby())))
				&& ((this.getModifyon() == castOther.getModifyon()) || (this
						.getModifyon() != null
						&& castOther.getModifyon() != null && this
						.getModifyon().equals(castOther.getModifyon())))
				&& ((this.getSerieskey() == castOther.getSerieskey()) || (this
						.getSerieskey() != null
						&& castOther.getSerieskey() != null && this
						.getSerieskey().equals(castOther.getSerieskey())))
				&& ((this.getContenttype() == castOther.getContenttype()) || (this
						.getContenttype() != null
						&& castOther.getContenttype() != null && this
						.getContenttype().equals(castOther.getContenttype())))
				&& ((this.getExtension() == castOther.getExtension()) || (this
						.getExtension() != null
						&& castOther.getExtension() != null && this
						.getExtension().equals(castOther.getExtension())))
				&& ((this.getOriginalfilename() == castOther
						.getOriginalfilename()) || (this.getOriginalfilename() != null
						&& castOther.getOriginalfilename() != null && this
						.getOriginalfilename().equals(
								castOther.getOriginalfilename())))
				&& ((this.getPath() == castOther.getPath()) || (this.getPath() != null
						&& castOther.getPath() != null && this.getPath()
						.equals(castOther.getPath())))
				&& ((this.getSimpletype() == castOther.getSimpletype()) || (this
						.getSimpletype() != null
						&& castOther.getSimpletype() != null && this
						.getSimpletype().equals(castOther.getSimpletype())))
				&& ((this.getSize() == castOther.getSize()) || (this.getSize() != null
						&& castOther.getSize() != null && this.getSize()
						.equals(castOther.getSize())))
				&& ((this.getSynopsis() == castOther.getSynopsis()) || (this
						.getSynopsis() != null
						&& castOther.getSynopsis() != null && this
						.getSynopsis().equals(castOther.getSynopsis())))
				&& ((this.getPopularity() == castOther.getPopularity()) || (this
						.getPopularity() != null
						&& castOther.getPopularity() != null && this
						.getPopularity().equals(castOther.getPopularity())))
				&& ((this.getLabel() == castOther.getLabel()) || (this
						.getLabel() != null && castOther.getLabel() != null && this
						.getLabel().equals(castOther.getLabel())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + (getId() == null ? 0 : this.getId().hashCode());
		result = 37 * result
				+ (getVersion() == null ? 0 : this.getVersion().hashCode());
		result = 37 * result
				+ (getCreatedby() == null ? 0 : this.getCreatedby().hashCode());
		result = 37 * result
				+ (getCreateon() == null ? 0 : this.getCreateon().hashCode());
		result = 37 * result
				+ (getFirm() == null ? 0 : this.getFirm().hashCode());
		result = 37
				* result
				+ (getLastmodifiedby() == null ? 0 : this.getLastmodifiedby()
						.hashCode());
		result = 37 * result
				+ (getModifyon() == null ? 0 : this.getModifyon().hashCode());
		result = 37 * result
				+ (getSerieskey() == null ? 0 : this.getSerieskey().hashCode());
		result = 37
				* result
				+ (getContenttype() == null ? 0 : this.getContenttype()
						.hashCode());
		result = 37 * result
				+ (getExtension() == null ? 0 : this.getExtension().hashCode());
		result = 37
				* result
				+ (getOriginalfilename() == null ? 0 : this
						.getOriginalfilename().hashCode());
		result = 37 * result
				+ (getPath() == null ? 0 : this.getPath().hashCode());
		result = 37
				* result
				+ (getSimpletype() == null ? 0 : this.getSimpletype()
						.hashCode());
		result = 37 * result
				+ (getSize() == null ? 0 : this.getSize().hashCode());
		result = 37 * result
				+ (getSynopsis() == null ? 0 : this.getSynopsis().hashCode());
		result = 37
				* result
				+ (getPopularity() == null ? 0 : this.getPopularity()
						.hashCode());
		result = 37 * result
				+ (getLabel() == null ? 0 : this.getLabel().hashCode());
		return result;
	}
// #SETTER_AND_GETTER
	
// ------------------ Logic part ------------------
	
	public DocDocumentsView specialInit() {
	
		
		return this;
	}
	public DocDocumentsView init() {
		initList();
		initDicts();
		
		return this;
	}
	
	public DocDocumentsView customInitList(List<String> list) {
		if (list.contains("tmFirmSettingses")) {
			initLists(tmFirmSettingses);
		}
		if (list.contains("relServHotelDocDocumentses")) {
			initLists(relServHotelDocDocumentses);
		}
		if (list.contains("reqServHotelsForDocumentForUserId")) {
			initLists(reqServHotelsForDocumentForUserId);
		}
		if (list.contains("reqServHotelsForDocumentForHotelId")) {
			initLists(reqServHotelsForDocumentForHotelId);
		}
		if (list.contains("infoPermissions")) {
			initLists(infoPermissions);
		}
		return this;
	}
	
	public DocDocumentsView initList() {

		return this;
	}
	
	public DocDocumentsView initDicts() {
		return this;
	}
	
	
}