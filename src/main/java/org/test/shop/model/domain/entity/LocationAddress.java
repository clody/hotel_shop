/* #UPDATED */
/* #CLEARED */
package org.test.shop.model.domain.entity;

// Generated 30.08.2015 21:00:08 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonProperty;
import javax.persistence.PreRemove;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;
import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import org.hibernate.annotations.OptimisticLockType;
import org.hibernate.annotations.OptimisticLocking;
import org.hibernate.annotations.SelectBeforeUpdate;

import org.test.shop.model.domain.SEntity;

import java.util.LinkedList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;



/**
 * LocationAddress generated by hbm2java, updated by voovee
 */
@DynamicInsert(true)
@DynamicUpdate(true)
@SelectBeforeUpdate(false)
@OptimisticLocking(type = OptimisticLockType.VERSION)
@JsonIgnoreProperties({
			 
			  "firmid"
			, "firm"
			, "serieskey" 
})
@Entity
@Table(name="location_address")
public class LocationAddress extends SEntity  {

	private static final long serialVersionUID = 9967316814113211L;

	@JsonProperty("id") private Integer id;
	@JsonProperty("descr") private String descr;
	@JsonProperty("name") private String name;
	@JsonProperty("yandexmappointx") private String yandexMapPointX;
	@JsonProperty("yandexmappointy") private String yandexMapPointY;
	private List<ServHotel> servHotels = new LinkedList<ServHotel>();

	public LocationAddress() {
	}

	public LocationAddress(int id) {
		this.id = id;
	}

	public LocationAddress(int id,

 String descr, String name,
			String yandexMapPointX,
			List<ServHotel> servHotels) {
		this.id = id;
		this.descr = descr;
		this.name=name;
		this.yandexMapPointX = yandexMapPointX;
		this.yandexMapPointY = yandexMapPointY;
		this.servHotels = servHotels;
	}

	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SQ_LOCATIONADDRESS")
	@SequenceGenerator(name = "SQ_LOCATIONADDRESS", sequenceName = "SQ_LOCATIONADDRESS", initialValue = 10, allocationSize = 1)
	@Id
	@Column(name="id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}
	

	

	

	

	

	

	@Column(name="descr", length = 2000)
	public String getDescr() {
		return this.descr;
	}

	public void setDescr(String descr) {
		this.descr = descr;
	}

	@Column(name="name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name=name;
	}

	@Column(name="yandex_map_point_x")
	public String getYandexMapPointX() {
		return this.yandexMapPointX;
	}

	public void setYandexMapPointX(String yandexMapPointX) {
		this.yandexMapPointX = yandexMapPointX;
	}

	@Column(name="yandex_map_point_y")
	public String getYandexMapPointY() {
		return this.yandexMapPointY;
	}

	public void setYandexMapPointY(String yandexMapPointY) {
		this.yandexMapPointY = yandexMapPointY;
	}

	

	@OneToMany(fetch=FetchType.LAZY, mappedBy="locationAddress")
	public List<ServHotel> getServHotels() {
		return this.servHotels;
	}

	public void setServHotels(List<ServHotel> servHotels) {
		this.servHotels = servHotels;
	}
// #SETTER_AND_GETTER
	
// ------------------ Logic part ------------------
	
	@PreRemove
	public void preRemove() {
		for (ServHotel arg0 : getServHotels()) {
			arg0.setLocationAddress(null);
		}




	}
	
	public LocationAddress specialInit() {
	
		
		return this;
	}
	
	public LocationAddress init() {
		initList();
		initDicts();
		
		return this;
	}
	
	public LocationAddress preInitList() {
		if(getServHotels() == null) setServHotels(new LinkedList());
		getServHotels().parallelStream().forEach(it -> it.setLocationAddress(this));

		return this;
	}
	
	public LocationAddress initList() {

		return this;
	}
	
	public LocationAddress initDicts() {

		return this;
	}
	
	
}