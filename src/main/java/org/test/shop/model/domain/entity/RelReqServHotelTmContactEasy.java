/* #UPDATED */
/* #CLEARED */
package org.test.shop.model.domain.entity;

// Generated 19.07.2015 11:22:34 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonProperty;

import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.BatchSize;
import org.test.shop.model.domain.SRel;

import javax.persistence.PreRemove;

import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * RelReqServHotelTmContactEasy generated by hbm2java, updated by voovee
 */
@JsonIgnoreProperties({
			 
			  "firmid"
			, "firm"
			, "serieskey" 
})
@Entity
@Table(name="rel_req_serv_hotel_tm_contact_easy")
public class RelReqServHotelTmContactEasy extends SRel  {

	private static final long serialVersionUID = 1631365775372168L;

	@JsonProperty("id") private Integer id;
	@JsonProperty("reqservhotel") private ReqServHotel reqServHotel;
	@JsonProperty("tmcontacteasy") private TmContactEasy tmContactEasy;

	public RelReqServHotelTmContactEasy() {
	}

	public RelReqServHotelTmContactEasy(int id) {
		this.id = id;
	}

	public RelReqServHotelTmContactEasy(int id, ReqServHotel reqServHotel,
			TmContactEasy tmContactEasy) {
		this.id = id;
		this.reqServHotel = reqServHotel;
		this.tmContactEasy = tmContactEasy;
	}

	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SQ_RELREQSERVHOTELTMCONTACTEASY")
	@SequenceGenerator(name = "SQ_RELREQSERVHOTELTMCONTACTEASY", sequenceName = "SQ_RELREQSERVHOTELTMCONTACTEASY", initialValue = 10, allocationSize = 1)
	@Id
	@Column(name="id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Fetch(FetchMode.JOIN)
	@BatchSize(size = 100)
	@ManyToOne(fetch=FetchType.EAGER, optional = true)
	@JoinColumn(name="req_serv_hotel_id")
	public ReqServHotel getReqServHotel() {
		return this.reqServHotel;
	}

	public void setReqServHotel(ReqServHotel reqServHotel) {
		this.reqServHotel = reqServHotel;
	}

	@Fetch(FetchMode.JOIN)
	@BatchSize(size = 100)
	@ManyToOne(fetch=FetchType.EAGER, cascade = CascadeType.ALL, optional = true)
	@JoinColumn(name="contact_easy_id")
	public TmContactEasy getTmContactEasy() {
		return this.tmContactEasy;
	}

	public void setTmContactEasy(TmContactEasy tmContactEasy) {
		this.tmContactEasy = tmContactEasy;
	}
// #SETTER_AND_GETTER
	
// ------------------ Logic part ------------------
	
	@PreRemove
	public void preRemove() {
		reqServHotel = null;
		tmContactEasy = null;

	}
	
	public RelReqServHotelTmContactEasy specialInit() {
	
		
		return this;
	}
	
	public RelReqServHotelTmContactEasy init() {
		initList();
		initDicts();
		
		return this;
	}
	
	public RelReqServHotelTmContactEasy preInitList() {

		return this;
	}
	
	public RelReqServHotelTmContactEasy initList() {

		return this;
	}
	
	public RelReqServHotelTmContactEasy initDicts() {
		initSentity(getReqServHotel());
		initSentity(getTmContactEasy());

		return this;
	}
	
	
}