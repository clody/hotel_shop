/* #UPDATED */
/* #CLEARED */
package org.test.shop.model.domain.entity;

// Generated 30.08.2015 21:00:08 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonProperty;
import javax.persistence.PreRemove;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.voodoodyne.jackson.jsog.JSOGGenerator;
import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import org.hibernate.annotations.OptimisticLockType;
import org.hibernate.annotations.OptimisticLocking;
import org.hibernate.annotations.SelectBeforeUpdate;

import org.test.shop.model.domain.SEntity;

import java.util.LinkedList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;



/**
 * InfoContactInformation generated by hbm2java, updated by voovee
 */
@DynamicInsert(true)
@DynamicUpdate(true)
@SelectBeforeUpdate(false)
@OptimisticLocking(type = OptimisticLockType.VERSION)
@JsonIdentityInfo(generator = JSOGGenerator.class)
@JsonIgnoreProperties({
			 
			  "firmid"
			, "firm"
			, "serieskey" 
})
@Entity
@Table(name="info_contact_information")
public class InfoContactInformation extends SEntity  {

	private static final long serialVersionUID = 1665554456525731L;

	@JsonProperty("id") private Integer id;
	@JsonProperty("contact") private String contact;
	@JsonProperty("descr") private String descr;
	@JsonProperty("email") private String email;
	@JsonProperty("email2") private String email2;
	@JsonProperty("email3") private String email3;
	@JsonProperty("phone") private String phone;
	@JsonProperty("phone2") private String phone2;
	@JsonProperty("phone3") private String phone3;
	@JsonProperty("website") private String website;
	private List<ServHotel> servHotels = new LinkedList<ServHotel>();

	public InfoContactInformation() {
	}

	public InfoContactInformation(int id) {
		this.id = id;
	}

	public InfoContactInformation(int id,

 String contact, String descr, String email,
			String email2, String email3, String phone, String phone2,
			String phone3,
			List<ServHotel> servHotels) {
		this.id = id;
		this.contact = contact;
		this.descr = descr;
		this.email = email;
		this.email2 = email2;
		this.email3 = email3;
		this.phone = phone;
		this.phone2 = phone2;
		this.phone3 = phone3;
		this.website = website;
		this.servHotels = servHotels;
	}

	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SQ_INFOCONTACTINFORMATION")
	@SequenceGenerator(name = "SQ_INFOCONTACTINFORMATION", sequenceName = "SQ_INFOCONTACTINFORMATION", initialValue = 10, allocationSize = 1)
	@Id
	@Column(name="id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}
	

	

	

	

	

	@Column(name="contact")
	public String getContact() {
		return this.contact;
	}

	public void setContact(String contact) {
		this.contact = contact;
	}

	@Column(name="descr", length = 2000)
	public String getDescr() {
		return this.descr;
	}

	public void setDescr(String descr) {
		this.descr = descr;
	}

	@Column(name="email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name="email2")
	public String getEmail2() {
		return this.email2;
	}

	public void setEmail2(String email2) {
		this.email2 = email2;
	}

	@Column(name="email3")
	public String getEmail3() {
		return this.email3;
	}

	public void setEmail3(String email3) {
		this.email3 = email3;
	}

	@Column(name="phone")
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name="phone2")
	public String getPhone2() {
		return this.phone2;
	}

	public void setPhone2(String phone2) {
		this.phone2 = phone2;
	}

	@Column(name="phone3")
	public String getPhone3() {
		return this.phone3;
	}

	public void setPhone3(String phone3) {
		this.phone3 = phone3;
	}

	@Column(name="website")
	public String getWebsite() {
		return this.website;
	}

	public void setWebsite(String website) {
		this.website = website;
	}

	

	@OneToMany(fetch=FetchType.LAZY, mappedBy="infoContactInformation")
	public List<ServHotel> getServHotels() {
		return this.servHotels;
	}

	public void setServHotels(List<ServHotel> servHotels) {
		this.servHotels = servHotels;
	}
// #SETTER_AND_GETTER
	
// ------------------ Logic part ------------------
	
	@PreRemove
	public void preRemove() {
		for (ServHotel arg0 : getServHotels()) {
			arg0.setInfoContactInformation(null);
		}




	}
	
	public InfoContactInformation specialInit() {
	
		
		return this;
	}
	
	public InfoContactInformation init() {
		initList();
		initDicts();
		
		return this;
	}
	
	public InfoContactInformation preInitList() {
		if(getServHotels() == null) setServHotels(new LinkedList());
		getServHotels().parallelStream().forEach(it -> it.setInfoContactInformation(this));

		return this;
	}
	
	public InfoContactInformation initList() {
		initLists(servHotels);

		return this;
	}
	
	public InfoContactInformation initDicts() {

		return this;
	}
	
	
}