/* #LAST_VIEW_OBJECT */
/* #UPDATED */
package org.test.shop.model.domain.entity.view;

// Generated 30.08.2015 21:00:08 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import javax.persistence.Table;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.FetchType;

import java.util.List;
import java.util.LinkedList;
import java.util.Date;

import javax.persistence.Column;

import org.test.shop.model.domain.SView;


/**
 * DictGlobalView generated by hbm2java, updated by voovee
 */
@JsonIgnoreProperties({
			 
			  "firmid"
			, "firm"
			, "serieskey"
			, "servTransfersForPaymentTypeId"
			, "servTransfersForTypeTransferId"
			, "servTransfersForTransportId"
			, "servHotelRooms" 
})
@Entity
@Table(name="dict_global_view")
public class DictGlobalView extends SView  {

	private static final long serialVersionUID = 8776193294232844L;

	private Integer id;
	private Integer version;
	private String createdby;
	private Date createon;
	private Integer firm;
	private String lastmodifiedby;
	private Date modifyon;
	private String serieskey;
	private String dicttype;
	private String dictvalue;
	private String dictvalueadditional;
	private Integer popularity;

	private List<ServTransferView> servTransfersForPaymentTypeId = new LinkedList<ServTransferView>();
	private List<ServTransferView> servTransfersForTypeTransferId = new LinkedList<ServTransferView>();
	private List<ServTransferView> servTransfersForTransportId = new LinkedList<ServTransferView>();
	private List<ServHotelRoomView> servHotelRooms = new LinkedList<ServHotelRoomView>();
	
	public DictGlobalView() {
	}

	public DictGlobalView(Integer id, Integer version, String createdby,
			Date createon, Integer firm, String lastmodifiedby, Date modifyon,
			String serieskey, String dicttype, String dictvalue,
			String dictvalueadditional, Integer popularity) {
		this.id = id;
		this.version = version;
		this.createdby = createdby;
		this.createon = createon;
		this.firm = firm;
		this.lastmodifiedby = lastmodifiedby;
		this.modifyon = modifyon;
		this.serieskey = serieskey;
		this.dicttype = dicttype;
		this.dictvalue = dictvalue;
		this.dictvalueadditional = dictvalueadditional;
		this.popularity = popularity;
	}

	@Id
	@Column(name="id")
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name="version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name="createdby")
	public String getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	@Column(name="createon", length = 29)
	public Date getCreateon() {
		return this.createon;
	}

	public void setCreateon(Date createon) {
		this.createon = createon;
	}

	@Column(name="firm")
	public Integer getFirm() {
		return this.firm;
	}

	public void setFirm(Integer firm) {
		this.firm = firm;
	}

	@Column(name="lastmodifiedby")
	public String getLastmodifiedby() {
		return this.lastmodifiedby;
	}

	public void setLastmodifiedby(String lastmodifiedby) {
		this.lastmodifiedby = lastmodifiedby;
	}

	@Column(name="modifyon", length = 29)
	public Date getModifyon() {
		return this.modifyon;
	}

	public void setModifyon(Date modifyon) {
		this.modifyon = modifyon;
	}

	@Column(name="serieskey")
	public String getSerieskey() {
		return this.serieskey;
	}

	public void setSerieskey(String serieskey) {
		this.serieskey = serieskey;
	}

	@Column(name="dicttype")
	public String getDicttype() {
		return this.dicttype;
	}

	public void setDicttype(String dicttype) {
		this.dicttype = dicttype;
	}

	@Column(name="dictvalue")
	public String getDictvalue() {
		return this.dictvalue;
	}

	public void setDictvalue(String dictvalue) {
		this.dictvalue = dictvalue;
	}

	@Column(name="dictvalueadditional")
	public String getDictvalueadditional() {
		return this.dictvalueadditional;
	}

	public void setDictvalueadditional(String dictvalueadditional) {
		this.dictvalueadditional = dictvalueadditional;
	}

	@Column(name="popularity")
	public Integer getPopularity() {
		return this.popularity;
	}

	public void setPopularity(Integer popularity) {
		this.popularity = popularity;
	}

	 	@OneToMany(fetch=FetchType.LAZY)
	@JoinColumn(name="dictglobalbypaymenttypeid")
	public List<ServTransferView> getServTransfersForPaymentTypeId() {
		return this.servTransfersForPaymentTypeId;
	}

	public void setServTransfersForPaymentTypeId(List<ServTransferView> servTransfersForPaymentTypeId) {
		this.servTransfersForPaymentTypeId = servTransfersForPaymentTypeId;
	}

	@OneToMany(fetch=FetchType.LAZY)
	@JoinColumn(name="dictglobalbytypetransferid")
	public List<ServTransferView> getServTransfersForTypeTransferId() {
		return this.servTransfersForTypeTransferId;
	}

	public void setServTransfersForTypeTransferId(List<ServTransferView> servTransfersForTypeTransferId) {
		this.servTransfersForTypeTransferId = servTransfersForTypeTransferId;
	}

	@OneToMany(fetch=FetchType.LAZY)
	@JoinColumn(name="dictglobalbytransportid")
	public List<ServTransferView> getServTransfersForTransportId() {
		return this.servTransfersForTransportId;
	}

	public void setServTransfersForTransportId(List<ServTransferView> servTransfersForTransportId) {
		this.servTransfersForTransportId = servTransfersForTransportId;
	}

	@OneToMany(fetch=FetchType.LAZY)
	@JoinColumn(name="dictglobalid")
	public List<ServHotelRoomView> getServHotelRooms() {
		return this.servHotelRooms;
	}

	public void setServHotelRooms(List<ServHotelRoomView> servHotelRooms) {
		this.servHotelRooms = servHotelRooms;
	}

	
	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof DictGlobalView))
			return false;
		DictGlobalView castOther = (DictGlobalView) other;

		return ((this.getId() == castOther.getId()) || (this.getId() != null
				&& castOther.getId() != null && this.getId().equals(
				castOther.getId())))
				&& ((this.getVersion() == castOther.getVersion()) || (this
						.getVersion() != null && castOther.getVersion() != null && this
						.getVersion().equals(castOther.getVersion())))
				&& ((this.getCreatedby() == castOther.getCreatedby()) || (this
						.getCreatedby() != null
						&& castOther.getCreatedby() != null && this
						.getCreatedby().equals(castOther.getCreatedby())))
				&& ((this.getCreateon() == castOther.getCreateon()) || (this
						.getCreateon() != null
						&& castOther.getCreateon() != null && this
						.getCreateon().equals(castOther.getCreateon())))
				&& ((this.getFirm() == castOther.getFirm()) || (this.getFirm() != null
						&& castOther.getFirm() != null && this.getFirm()
						.equals(castOther.getFirm())))
				&& ((this.getLastmodifiedby() == castOther.getLastmodifiedby()) || (this
						.getLastmodifiedby() != null
						&& castOther.getLastmodifiedby() != null && this
						.getLastmodifiedby().equals(
								castOther.getLastmodifiedby())))
				&& ((this.getModifyon() == castOther.getModifyon()) || (this
						.getModifyon() != null
						&& castOther.getModifyon() != null && this
						.getModifyon().equals(castOther.getModifyon())))
				&& ((this.getSerieskey() == castOther.getSerieskey()) || (this
						.getSerieskey() != null
						&& castOther.getSerieskey() != null && this
						.getSerieskey().equals(castOther.getSerieskey())))
				&& ((this.getDicttype() == castOther.getDicttype()) || (this
						.getDicttype() != null
						&& castOther.getDicttype() != null && this
						.getDicttype().equals(castOther.getDicttype())))
				&& ((this.getDictvalue() == castOther.getDictvalue()) || (this
						.getDictvalue() != null
						&& castOther.getDictvalue() != null && this
						.getDictvalue().equals(castOther.getDictvalue())))
				&& ((this.getDictvalueadditional() == castOther
						.getDictvalueadditional()) || (this
						.getDictvalueadditional() != null
						&& castOther.getDictvalueadditional() != null && this
						.getDictvalueadditional().equals(
								castOther.getDictvalueadditional())))
				&& ((this.getPopularity() == castOther.getPopularity()) || (this
						.getPopularity() != null
						&& castOther.getPopularity() != null && this
						.getPopularity().equals(castOther.getPopularity())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + (getId() == null ? 0 : this.getId().hashCode());
		result = 37 * result
				+ (getVersion() == null ? 0 : this.getVersion().hashCode());
		result = 37 * result
				+ (getCreatedby() == null ? 0 : this.getCreatedby().hashCode());
		result = 37 * result
				+ (getCreateon() == null ? 0 : this.getCreateon().hashCode());
		result = 37 * result
				+ (getFirm() == null ? 0 : this.getFirm().hashCode());
		result = 37
				* result
				+ (getLastmodifiedby() == null ? 0 : this.getLastmodifiedby()
						.hashCode());
		result = 37 * result
				+ (getModifyon() == null ? 0 : this.getModifyon().hashCode());
		result = 37 * result
				+ (getSerieskey() == null ? 0 : this.getSerieskey().hashCode());
		result = 37 * result
				+ (getDicttype() == null ? 0 : this.getDicttype().hashCode());
		result = 37 * result
				+ (getDictvalue() == null ? 0 : this.getDictvalue().hashCode());
		result = 37
				* result
				+ (getDictvalueadditional() == null ? 0 : this
						.getDictvalueadditional().hashCode());
		result = 37
				* result
				+ (getPopularity() == null ? 0 : this.getPopularity()
						.hashCode());
		return result;
	}
// #SETTER_AND_GETTER
	
// ------------------ Logic part ------------------
	
	public DictGlobalView specialInit() {
	
		
		return this;
	}
	public DictGlobalView init() {
		initList();
		initDicts();
		
		return this;
	}
	
	public DictGlobalView customInitList(List<String> list) {
		if (list.contains("servTransfersForPaymentTypeId")) {
			initLists(servTransfersForPaymentTypeId);
		}
		if (list.contains("servTransfersForTypeTransferId")) {
			initLists(servTransfersForTypeTransferId);
		}
		if (list.contains("servTransfersForTransportId")) {
			initLists(servTransfersForTransportId);
		}
		if (list.contains("servHotelRooms")) {
			initLists(servHotelRooms);
		}
		return this;
	}
	
	public DictGlobalView initList() {

		return this;
	}
	
	public DictGlobalView initDicts() {
		return this;
	}
	
	
}