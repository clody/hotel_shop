/* #UPDATED */
/* #CLEARED */
package org.test.shop.model.domain.entity;

// Generated 30.08.2015 21:00:08 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonProperty;

import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.BatchSize;
import org.test.shop.model.domain.SRel;

import javax.persistence.PreRemove;

import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * RelMailNewsletterGroup generated by hbm2java, updated by voovee
 */
@JsonIgnoreProperties({
			 
			  "firmid"
			, "firm"
			, "serieskey" 
})
@Entity
@Table(name="rel_mail_newsletter_group")
public class RelMailNewsletterGroup extends SRel  {

	private static final long serialVersionUID = 2871232193564145L;

	@JsonProperty("id") private Integer id;
	@JsonProperty("tmmailnewsletter") private TmMailNewsletter tmMailNewsletter;
	@JsonProperty("tmmailnewslettergroup") private TmMailNewsletterGroup tmMailNewsletterGroup;

	public RelMailNewsletterGroup() {
	}

	public RelMailNewsletterGroup(int id) {
		this.id = id;
	}

	public RelMailNewsletterGroup(int id, TmMailNewsletter tmMailNewsletter,
			TmMailNewsletterGroup tmMailNewsletterGroup) {
		this.id = id;
		this.tmMailNewsletter = tmMailNewsletter;
		this.tmMailNewsletterGroup = tmMailNewsletterGroup;
	}

	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SQ_RELMAILNEWSLETTERGROUP")
	@SequenceGenerator(name = "SQ_RELMAILNEWSLETTERGROUP", sequenceName = "SQ_RELMAILNEWSLETTERGROUP", initialValue = 10, allocationSize = 1)
	@Id
	@Column(name="id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Fetch(FetchMode.JOIN)
	@BatchSize(size = 100)
	@ManyToOne(fetch=FetchType.EAGER, optional = true)
	@JoinColumn(name="tm_mail_newsletter_id")
	public TmMailNewsletter getTmMailNewsletter() {
		return this.tmMailNewsletter;
	}

	public void setTmMailNewsletter(TmMailNewsletter tmMailNewsletter) {
		this.tmMailNewsletter = tmMailNewsletter;
	}

	@Fetch(FetchMode.JOIN)
	@BatchSize(size = 100)
	@ManyToOne(fetch=FetchType.EAGER, optional = true)
	@JoinColumn(name="tm_mail_newsletter_group_id")
	public TmMailNewsletterGroup getTmMailNewsletterGroup() {
		return this.tmMailNewsletterGroup;
	}

	public void setTmMailNewsletterGroup(
			TmMailNewsletterGroup tmMailNewsletterGroup) {
		this.tmMailNewsletterGroup = tmMailNewsletterGroup;
	}
// #SETTER_AND_GETTER
	
// ------------------ Logic part ------------------
	
	@PreRemove
	public void preRemove() {
		tmMailNewsletter = null;
		tmMailNewsletterGroup = null;

	}
	
	public RelMailNewsletterGroup specialInit() {
	
		
		return this;
	}
	
	public RelMailNewsletterGroup init() {
		initList();
		initDicts();
		
		return this;
	}
	
	public RelMailNewsletterGroup preInitList() {

		return this;
	}
	
	public RelMailNewsletterGroup initList() {

		return this;
	}
	
	public RelMailNewsletterGroup initDicts() {
		initSentity(getTmMailNewsletter());
		initSentity(getTmMailNewsletterGroup());

		return this;
	}
	
	
}