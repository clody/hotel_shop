/* #UPDATED */
/* #CLEARED */
package org.test.shop.model.domain.entity;

// Generated 30.08.2015 21:00:08 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonProperty;
import javax.persistence.PreRemove;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.voodoodyne.jackson.jsog.JSOGGenerator;
import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import org.hibernate.annotations.OptimisticLockType;
import org.hibernate.annotations.OptimisticLocking;
import org.hibernate.annotations.SelectBeforeUpdate;
import javax.persistence.CascadeType;
import org.test.shop.model.domain.SEntity;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ServHotelRoom generated by hbm2java, updated by voovee
 */
@DynamicInsert(true)
@DynamicUpdate(true)
@SelectBeforeUpdate(false)
@OptimisticLocking(type = OptimisticLockType.VERSION)
@JsonIdentityInfo(generator = JSOGGenerator.class)
@JsonIgnoreProperties({
			 
			  "firmid"
			, "firm"
			, "serieskey" 
})
@Entity
@Table(name="serv_hotel_room")
public class ServHotelRoom extends SEntity  {

	private static final long serialVersionUID = 5219211469373168L;

	@JsonProperty("id") private Integer id;
	@JsonProperty("dictglobal") private DictGlobal dictGlobal;
	@JsonProperty("paymenttariffbycosttarriff") private PaymentTariff paymentTariffByCostTarriffId;
	@JsonProperty("paymenttariffbyrrtarriff") private PaymentTariff paymentTariffByRrTarriffId;
	@JsonProperty("paymenttariffshop") private PaymentTariffShop paymentTariffShop;
	@JsonProperty("servhotel") private ServHotel servHotel;
	@JsonProperty("breakfast") private Boolean breakfast;
	@JsonProperty("descr") private String descr;
	@JsonProperty("guestnumber") private Integer guestNumber;
	@JsonProperty("roomnumber") private Integer roomNumber;
	@JsonProperty("dinner") private Boolean dinner;
	@JsonProperty("lunch") private Boolean lunch;
	@JsonProperty("discount") private Integer discount;
	@JsonProperty("isdiscount") private Boolean isDiscount;
	@JsonProperty("commission") private Integer commission;
	@JsonProperty("fresale") private Integer fresale;
	@JsonProperty("fresaletoday") private Integer fresaleToday;
	@JsonProperty("fresaleenabled") private Boolean fresaleEnabled;
	@JsonProperty("fresalestart") private Date fresaleStart;
	@JsonProperty("fresaleend") private Date fresaleEnd;
	@JsonProperty("iscommission") private Boolean isCommission;
	private List<ReqServHotel> reqServHotels = new LinkedList<ReqServHotel>();
	private List<RelServHotelRoomImage> relServHotelRoomImages = new LinkedList<RelServHotelRoomImage>();

	public ServHotelRoom() {
	}

	public ServHotelRoom(int id) {
		this.id = id;
	}

	public ServHotelRoom(int id, DictGlobal dictGlobal,
			PaymentTariff paymentTariffByCostTarriffId,
			PaymentTariff paymentTariffByRrTarriffId,
			PaymentTariffShop paymentTariffShop, ServHotel servHotel,


 Boolean breakfast, String descr, Integer guestNumber,
			Integer roomNumber, Boolean dinner, Boolean lunch,
			Integer discount, Boolean isDiscount, Integer commission,
			Integer fresale, Integer fresaleToday, Boolean fresaleEnabled,
			Date fresaleStart, Date fresaleEnd, Boolean isCommission,
 List<ReqServHotel> reqServHotels,
			List<RelServHotelRoomImage> relServHotelRoomImages) {
		this.id = id;
		this.dictGlobal = dictGlobal;
		this.paymentTariffByCostTarriffId = paymentTariffByCostTarriffId;
		this.paymentTariffByRrTarriffId = paymentTariffByRrTarriffId;
		this.paymentTariffShop = paymentTariffShop;
		this.servHotel = servHotel;
		this.breakfast = breakfast;
		this.descr = descr;
		this.guestNumber = guestNumber;
		this.roomNumber = roomNumber;
		this.dinner = dinner;
		this.lunch = lunch;
		this.discount = discount;
		this.isDiscount = isDiscount;
		this.commission = commission;
		this.fresale = fresale;
		this.fresaleToday = fresaleToday;
		this.fresaleEnabled = fresaleEnabled;
		this.fresaleStart = fresaleStart;
		this.fresaleEnd = fresaleEnd;
		this.isCommission = isCommission;
		this.reqServHotels = reqServHotels;
		this.relServHotelRoomImages = relServHotelRoomImages;
	}

	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SQ_SERVHOTELROOM")
	@SequenceGenerator(name = "SQ_SERVHOTELROOM", sequenceName = "SQ_SERVHOTELROOM", initialValue = 10, allocationSize = 1)
	@Id
	@Column(name="id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}
	

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="room_type_id")
	public DictGlobal getDictGlobal() {
		return this.dictGlobal;
	}

	public void setDictGlobal(DictGlobal dictGlobal) {
		this.dictGlobal = dictGlobal;
	}

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="cost_tarriff_id")
	public PaymentTariff getPaymentTariffByCostTarriffId() {
		return this.paymentTariffByCostTarriffId;
	}

	public void setPaymentTariffByCostTarriffId(
			PaymentTariff paymentTariffByCostTarriffId) {
		this.paymentTariffByCostTarriffId = paymentTariffByCostTarriffId;
	}

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="rr_tarriff_id")
	public PaymentTariff getPaymentTariffByRrTarriffId() {
		return this.paymentTariffByRrTarriffId;
	}

	public void setPaymentTariffByRrTarriffId(
			PaymentTariff paymentTariffByRrTarriffId) {
		this.paymentTariffByRrTarriffId = paymentTariffByRrTarriffId;
	}

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="shop_tarriff_id")
	public PaymentTariffShop getPaymentTariffShop() {
		return this.paymentTariffShop;
	}

	public void setPaymentTariffShop(PaymentTariffShop paymentTariffShop) {
		this.paymentTariffShop = paymentTariffShop;
	}

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="hotel_id")
	public ServHotel getServHotel() {
		return this.servHotel;
	}

	public void setServHotel(ServHotel servHotel) {
		this.servHotel = servHotel;
	}

	

	

	

	

	

	@Column(name="breakfast")
	public Boolean getBreakfast() {
		return this.breakfast;
	}

	public void setBreakfast(Boolean breakfast) {
		this.breakfast = breakfast;
	}

	@Column(name="descr", length = 2000)
	public String getDescr() {
		return this.descr;
	}

	public void setDescr(String descr) {
		this.descr = descr;
	}

	@Column(name="guest_number")
	public Integer getGuestNumber() {
		return this.guestNumber;
	}

	public void setGuestNumber(Integer guestNumber) {
		this.guestNumber = guestNumber;
	}

	@Column(name="room_number")
	public Integer getRoomNumber() {
		return this.roomNumber;
	}

	public void setRoomNumber(Integer roomNumber) {
		this.roomNumber = roomNumber;
	}

	@Column(name="dinner")
	public Boolean getDinner() {
		return this.dinner;
	}

	public void setDinner(Boolean dinner) {
		this.dinner = dinner;
	}

	@Column(name="lunch")
	public Boolean getLunch() {
		return this.lunch;
	}

	public void setLunch(Boolean lunch) {
		this.lunch = lunch;
	}

	@Column(name="discount")
	public Integer getDiscount() {
		return this.discount;
	}

	public void setDiscount(Integer discount) {
		this.discount = discount;
	}

	@Column(name="is_discount")
	public Boolean getIsDiscount() {
		return this.isDiscount;
	}

	public void setIsDiscount(Boolean isDiscount) {
		this.isDiscount = isDiscount;
	}

	@Column(name="commission")
	public Integer getCommission() {
		return this.commission;
	}

	public void setCommission(Integer commission) {
		this.commission = commission;
	}

	@Column(name="fresale")
	public Integer getFresale() {
		return this.fresale;
	}

	public void setFresale(Integer fresale) {
		this.fresale = fresale;
	}

	@Column(name="fresale_today")
	public Integer getFresaleToday() {
		return this.fresaleToday;
	}

	public void setFresaleToday(Integer fresaleToday) {
		this.fresaleToday = fresaleToday;
	}

	@Column(name="fresale_enabled")
	public Boolean getFresaleEnabled() {
		return this.fresaleEnabled;
	}

	public void setFresaleEnabled(Boolean fresaleEnabled) {
		this.fresaleEnabled = fresaleEnabled;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="fresale_start", length = 29)
	public Date getFresaleStart() {
		return this.fresaleStart;
	}

	public void setFresaleStart(Date fresaleStart) {
		this.fresaleStart = fresaleStart;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="fresale_end", length = 29)
	public Date getFresaleEnd() {
		return this.fresaleEnd;
	}

	public void setFresaleEnd(Date fresaleEnd) {
		this.fresaleEnd = fresaleEnd;
	}

	@Column(name="is_commission")
	public Boolean getIsCommission() {
		return this.isCommission;
	}

	public void setIsCommission(Boolean isCommission) {
		this.isCommission = isCommission;
	}

	

	@OneToMany(fetch=FetchType.LAZY, mappedBy="servHotelRoom")
	public List<ReqServHotel> getReqServHotels() {
		return this.reqServHotels;
	}

	public void setReqServHotels(List<ReqServHotel> reqServHotels) {
		this.reqServHotels = reqServHotels;
	}

	@OneToMany(fetch=FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy="servHotelRoom")
	public List<RelServHotelRoomImage> getRelServHotelRoomImages() {
		return this.relServHotelRoomImages;
	}

	public void setRelServHotelRoomImages(List<RelServHotelRoomImage> relServHotelRoomImages) {
		this.relServHotelRoomImages = relServHotelRoomImages;
	}
// #SETTER_AND_GETTER
	
// ------------------ Logic part ------------------
	
	@PreRemove
	public void preRemove() {
		for (ReqServHotel arg0 : getReqServHotels()) {
			arg0.setServHotelRoom(null);
		}



		dictGlobal = null;
		paymentTariffByCostTarriffId = null;
		paymentTariffByRrTarriffId = null;
		paymentTariffShop = null;
		servHotel = null;

	}
	
	public ServHotelRoom specialInit() {
	
		
		return this;
	}
	
	public ServHotelRoom init() {
		initList();
		initDicts();
		
		return this;
	}
	
	public ServHotelRoom preInitList() {
		if(getReqServHotels() == null) setReqServHotels(new LinkedList());
		getReqServHotels().parallelStream().forEach(it -> it.setServHotelRoom(this));
		if(getRelServHotelRoomImages() == null) setRelServHotelRoomImages(new LinkedList());
		getRelServHotelRoomImages().parallelStream().forEach(it -> it.setServHotelRoom(this));

		return this;
	}
	
	public ServHotelRoom initList() {
		initLists(reqServHotels);
		initLists(relServHotelRoomImages);

		return this;
	}
	
	public ServHotelRoom initDicts() {
		initSentity(getDictGlobal());
		initSentity(getPaymentTariffByCostTarriffId());
		initSentity(getPaymentTariffByRrTarriffId());
		initSentity(getPaymentTariffShop());
		initSentity(getServHotel());

		return this;
	}
	
	
}